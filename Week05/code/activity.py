"""
    NOTE: Copy the example_prices.txt file from the
    instructions folder into where this code is for it to work
    properly

    NOTE 2: As each file should be generated by the students,
    there are no examples for extensions 1 and 2

    NOTE 3: This extension is already depicted here.
"""
class Comparator():
    def __init__(self, in_file, out_file):
        self.input_file = in_file
        self.output_file = out_file
        self.data_in = []

    def parse_info(self):
        for line in self.input_file.readlines():
            self.data_in.append([])
            temp = line.split()
            self.data_in[-1].append(temp[0])
            self.data_in[-1].append(float(temp[1]))
            self.data_in[-1].append(float(temp[2]))
            self.data_in[-1].append(float(temp[3]))
            self.data_in[-1].append(float(temp[4]))

    def calculate_ratio(self, row):
        ratio1 = round(row[1]/row[2], 2)
        ratio2 = round(row[3]/row[4], 2)
        return [ratio1, ratio2]

    def select_deal(self, ratios):
        answer = ""
        if ratios[0] < ratios[1]:
            answer = "A"
        elif ratios[1] < ratios[0]:
            answer = "B"
        else:
            answer = "A/B"

        return answer

    def write_data(self, data):
        self.output_file.write(f"{data[0]}: {data[1]}, {data[2]}, {data[3]}.\n")

    def run(self):
        self.parse_info()
        for row in self.data_in:
            out_data = []
            out_data.append(row[0])
            temp = self.calculate_ratio(row)
            out_data.extend(temp)
            out_data.append(self.select_deal(temp))
            self.write_data(out_data)         

def main():
    #used a compound with statement.
    #It is the same as nesting it
    with open("example_prices.txt", "r") as ifile,\
         open("example_output.txt", "w") as ofile:
        comp = Comparator(ifile, ofile)
        comp.run()
        
if __name__ == "__main__":
    main()
