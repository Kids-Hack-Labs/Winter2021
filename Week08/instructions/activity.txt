Kids Hack Labs
Winter 2021 term
Week 08
Activity: Text Generation and Use

Task:
Create the TextGenerator class, define the generate_text() static 
method, use it in the Scene class to create a text surface. Remember to
update the scene_data.json file with the text parameters information.

Breakdown of the task

Open the text_generator.py file. Add the necessary imports 
(pygame.font, the Font class from pygame.font, the Color, Rect and 
Surface classes from pygame)

Create the TextGenerator class

Create a static method named generate_text. The method should take 
three arguments: the text as a string, the font parameters as a dict,
and the background colour as a Color.

In the generate_text() body, create a temporary variable to store the
font path. With that information, create a Font object with the font
path and the specified size in the font parameters. Return the Surface
generated by rendering the text using the Font object, the text colour
and the background colour.

In the scene.py file, import the TextGenerator class from the 
text_generator module.

In the Scene class's initializer, generate a text surface using the
generate_text() method and get its Rect using the get_rect() method.

In the Scene class's render() method, position the text rect on the
screen using the target's rect (use target.get_rect() to get that
information). Blit the text rect on the target.

In the scene_data.json file, include a key called "fontparams". Its
value should be an object with three other keys: "name", "size" and
"colour", where "name" must be a font name as a string, "size" is an
integer, and "colour" is a list of three values ranging between 0-255.

Run the quiz.py file. If everything is correct, the first question in
the "questions.csv" file should be displayed on screen.